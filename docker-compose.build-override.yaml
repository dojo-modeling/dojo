services:
  airflow-init:
    environment:
      DOCKER_URL: "docker.dojo-stack:8375"
      DMC_LOCAL_DIR:
      MIXMASTA_VERSION:
    networks:
      - dojo-stack
    volumes:
      - dmc-data-results:/data/results
      - dmc-data-mappers:/mappers
      - dmc-data-model_configs:/model_configs
  airflow-redis:
    environment:
      DOCKER_URL: "docker.dojo-stack:8375"
      DMC_LOCAL_DIR:
      MIXMASTA_VERSION:
    networks:
      - dojo-stack
  airflow-postgres:
    environment:
      DOCKER_URL: "docker.dojo-stack:8375"
      DMC_LOCAL_DIR:
      MIXMASTA_VERSION:
    networks:
      - dojo-stack
  airflow-scheduler:
    environment:
      DOCKER_URL: "docker.dojo-stack:8375"
      DMC_LOCAL_DIR:
      MIXMASTA_VERSION:
    networks:
      - dojo-stack
    volumes:
      - dmc-data-results:/data/results
      - dmc-data-mappers:/mappers
      - dmc-data-model_configs:/model_configs
  airflow-webserver:
    environment:
      DOCKER_URL: "docker.dojo-stack:8375"
      DMC_LOCAL_DIR:
      MIXMASTA_VERSION:
    networks:
      - dojo-stack
    volumes:
      - dmc-data-results:/data/results
      - dmc-data-mappers:/mappers
      - dmc-data-model_configs:/model_configs
  airflow-worker:
    environment:
      AIRFLOW_CONN_AWS_DEFAULT: aws://${AWS_ACCESS_KEY_ID}:${AWS_SECRET_ACCESS_KEY_ENCODED}@
      DOCKER_URL: "docker.dojo-stack:8375"
      DMC_LOCAL_DIR:
      MIXMASTA_VERSION:
    networks:
      - dojo-stack
    volumes:
      - dmc-data-results:/data/results
      - dmc-data-mappers:/mappers
      - dmc-data-model_configs:/model_configs
  flower:
    environment:
      DOCKER_URL: "docker.dojo-stack:8375"
      DMC_LOCAL_DIR:
      MIXMASTA_VERSION:
    networks:
      - dojo-stack
  api:
    command:
      [
        "uvicorn",
        "server:api",
        "--host",
        "0.0.0.0",
        "--port",
        "80",
        "--reload",
        "--reload-dir",
        "src",
        "--log-config",
        "logging.yaml"
      ]
    volumes:
      - ./api:/api
      - local-storage:/storage
    env_file:
      - envfile
    environment:
      - DOJO_URL
      - DMC_LOCAL_DIR
      - DMC_URL
      - DMC_PASSWORD
      - REDIS_HOST
      - DOCKERHUB_USER
      - DOCKERHUB_PWD
    networks:
      - dojo-stack
    depends_on:
      elasticsearch:
        condition: service_healthy
  terminal:
    command: -debug -pull-images=false
    volumes:
      - ${PWD}/terminal/api/server/settings.yaml:/home/app/connector/settings.yaml:rw
    env_file:
      - envfile
    environment:
      - DOCKERHUB_AUTH
    networks:
      - dojo-stack
    depends_on:
      - redis
  kibana:
    env_file:
      - envfile
    networks:
      - dojo-stack
    depends_on:
      elasticsearch:
        condition: service_healthy
  elasticsearch:
    env_file:
      - envfile
    networks:
      - dojo-stack
    healthcheck:
      interval: 3s
      retries: 20
      test:
      - CMD
      - curl
      - --fail
      - http://localhost:9200/_cluster/health
      timeout: 3s
  redis:
    env_file:
      - envfile
    networks:
      - dojo-stack
  docker:
    env_file:
      - envfile
    networks:
      - dojo-stack
    volumes:
      - dmc-data-results:/data/results
      - dmc-data-mappers:/data/mappers
      - dmc-data-model_configs:/data/model_configs
  ui:
    build:
      context: ./ui/
      dockerfile: Dockerfile.dev
    container_name: ui
    env_file:
      - envfile
    volumes:
      - "./ui:/ui"
    expose:
      - 8080
    ports:
      - "8080:8080"
    command:
      - npx
      - webpack
      - serve
      - --mode
      - development
      - --config
      - ./webpack.config.dev.js
      - --host
      - 0.0.0.0
    networks:
      - dojo-stack
    volumes:
      - dmc-data-results:/data/results
      - dmc-data-mappers:/mappers
      - dmc-data-model_configs:/model_configs
  perm-fixer:
    build:
      context: ./build/perm-fixer/
    volumes:
      - dmc-data-results:/data/results
      - dmc-data-mappers:/data/mappers
      - dmc-data-model_configs:/data/model_configs
  rqworker:
    env_file:
      - envfile
    networks:
      - dojo-stack
    depends_on:
      - redis
    volumes:
      - local-storage:/storage

networks:
  dojo-stack:
    driver: bridge
    name: dojo-stack

volumes:
  dmc-data-results:
  dmc-data-mappers:
  dmc-data-model_configs:
  local-storage:
